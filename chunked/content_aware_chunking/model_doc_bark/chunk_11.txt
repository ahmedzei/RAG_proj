You can help it out by adding music notes around your lyrics.
inputs = processor("♪ Hello, my dog is cute ♪")
audio_array = model.generate(**inputs)
audio_array = audio_array.cpu().numpy().squeeze()

The model can also produce nonverbal communications like laughing, sighing and crying.
thon

Adding non-speech cues to the input text
inputs = processor("Hello uh  [clears throat], my dog is cute [laughter]")
audio_array = model.generate(**inputs)
audio_array = audio_array.cpu().numpy().squeeze()

To save the audio, simply take the sample rate from the model config and some scipy utility:
thon

from scipy.io.wavfile import write as write_wav
save audio to disk, but first take the sample rate from the model config
sample_rate = model.generation_config.sample_rate
write_wav("bark_generation.wav", sample_rate, audio_array)

BarkConfig
[[autodoc]] BarkConfig
    - all
BarkProcessor
[[autodoc]] BarkProcessor
    - all
    - call
BarkModel
[[autodoc]] BarkModel
    - generate
    - enable_cpu_offload
BarkSemanticModel
[[autodoc]] BarkSemanticModel
    - forward
BarkCoarseModel
[[autodoc]] BarkCoarseModel
    - forward
BarkFineModel
[[autodoc]] BarkFineModel
    - forward
BarkCausalModel
[[autodoc]] BarkCausalModel
    - forward
BarkCoarseConfig
[[autodoc]] BarkCoarseConfig
    - all
BarkFineConfig
[[autodoc]] BarkFineConfig
    - all
BarkSemanticConfig
[[autodoc]] BarkSemanticConfig
    - all.