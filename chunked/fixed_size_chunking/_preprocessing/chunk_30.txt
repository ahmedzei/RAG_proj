), ColorJitter(brightness=0.5, hue=0.5)])

The model accepts pixel_values
as its input. ImageProcessor can take care of normalizing the images, and generating appropriate tensors.
Create a function that combines image augmentation and image preprocessing for a batch of images and generates pixel_values:

def transforms(examples):
     images = [_transforms(img.convert("RGB")) for img in examples["image"]]
     examples["pixel_values"] = image_processor(images, do_resize=False, return_tensors="pt")["pixel_va