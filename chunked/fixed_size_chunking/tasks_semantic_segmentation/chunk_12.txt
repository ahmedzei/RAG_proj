turation(image, 0.75, 1.25)
     image = tf.image.random_hue(image, 0.1)
     image = tf.transpose(image, (2, 0, 1))
     return image
def transforms(image):
     image = tf.keras.utils.img_to_array(image)
     image = tf.transpose(image, (2, 0, 1))
     return image

Next, create two preprocessing functions to prepare batches of images and annotations for the model. These functions apply
the image transformations and use the earlier loaded image_processor to convert the images into pixel_values and
annotat